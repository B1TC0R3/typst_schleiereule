// Copyright 2024 Thomas Gingele https://github.com/B1TC0R3

#let color_from_severity(severity) = {

  if severity >= 9 { // Critical
    return color.red.lighten(10%)
  } else if severity > 6.9 { // High
    return color.orange.lighten(20%)
  } else if severity > 3.9 { // Medium
    return color.yellow.lighten(30%)
  } else if severity > 0 { // Low
    return color.green.lighten(30%)
  }

  return color.gray.lighten(40%) // No vulnerability
}

#let text_from_severity(severity) = {

  if severity >= 9 { // Critical
    return "Critical"
  } else if severity > 6.9 { // High
    return "High"
  } else if severity > 3.9 { // Medium
    return "Medium"
  } else if severity > 0 { // Low
    return "Low"
  }

  return "Info" // No vulnerability
}

#let vulnerability(
  title         : "",
  description   : "",
  impact        : "",
  recommendation: "",
  cvss          : 0.0,
) = {
  let cvss_color = color_from_severity(cvss)
  let cvss_text  = text_from_severity(cvss)

  block(
    radius: 5pt,
    stroke: 2pt,
    clip: true,
    width: 100%,
    breakable: true,
    grid(
      columns: (70%, 30%),
      rows: (auto, auto, auto),
      stroke: 1pt,
      inset: 10pt,
      grid.cell(
        fill: rgb("#cccccc"),
        text(weight: "bold", title)
      ),
      grid.cell(
        fill: cvss_color,
        align(
          center,
          [CVSS: #cvss / #cvss_text]
        )
      ),
      grid.cell(
        colspan: 2,
        [*Description:* #description]
      ),
      grid.cell(
        colspan: 2,
        [*Impact:* #impact]
      ),
      grid.cell(
        colspan: 2,
        [*Recommendation:* #recommendation]
      )
    ) 
  )
}

#let vulnerability-summary(
  critical: 0,
  high    : 0,
  medium  : 0,
  low     : 0,
  info    : 0,
) = {
  block(
    radius: 5pt,
    clip: true,
    width: 100%,
    breakable: false,
    stroke: 2pt,
    table(
      columns: (15%, 17%, 17%, 17%, 17%, 17%),
      table.cell(fill: color.gray.lighten(80%))[*Severity*], 
      table.cell(fill: color_from_severity(10))[#text_from_severity(10)],
      table.cell(fill: color_from_severity(7))[#text_from_severity(7)],
      table.cell(fill: color_from_severity(4))[#text_from_severity(4)],
      table.cell(fill: color_from_severity(1))[#text_from_severity(1)],
      table.cell(fill: color_from_severity(0))[#text_from_severity(0)],
      table.cell(fill: color.gray.lighten(80%))[*Count*], 
      [#critical], [#high], [#medium], [#low], [#info],
    )
  ) 
}